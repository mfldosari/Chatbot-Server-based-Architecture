name: Python App CI/CD Pipeline with Direct Deployment




on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  

jobs:

  run-tests:
    name: Testing Phases (1-6)
    runs-on: ubuntu-latest
    env:
          G_TOKEN: ${{ secrets.G_TOKEN }}
          REPO_URL: ${{ vars.REPO_URL }}
          REPO_NAME: ${{ vars.REPO_NAME }}
          KEY_VAULT_NAME: ${{ vars.KEY_VAULT_NAME }}
          USERNAME: ${{ vars.USERNAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Phase 1 - Install dependencies
        run: |
          pip install -r requirements.txt
          
      - name: Phase 2 - Azure Login
        uses: azure/login@v2.2.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Phase 3 - Check yaml files structure , git cloning and ENVs
        run: |
          pytest tests/test_yaml_scripts.py

      - name: Phase 4 - Check Key Vault Access
        run: |
            pytest tests/test_keyvault_values.py


      - name: Phase 5 - Check Database Access
        run: |
            pytest tests/test_database_connection.py
      
      - name: Phase 6 - Check Chroma version
        run: |
            pytest tests/test_chroma_version.py


  build-and-deploy:
    name: Deploy to the Cloud
    runs-on: ubuntu-latest
    needs: run-tests

    steps:
    # Azure Login using GitHub Secrets
    - name: Azure Login
      uses: azure/login@v2.2.0
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Execute the Update Script on the VMSS
    - name: Deploy to Azure VMSS
      run: |
        az vmss extension set \
          --resource-group ${{ secrets.RESOURCE_GROUP }} \
          --vmss-name ${{ secrets.VMSS_NAME }} \
          --name CustomScript \
          --force-update \
          --publisher Microsoft.Azure.Extensions \
          --settings '{"commandToExecute": "/home/${{vars.USERNAME}}/stage6.5/update.sh"}'
